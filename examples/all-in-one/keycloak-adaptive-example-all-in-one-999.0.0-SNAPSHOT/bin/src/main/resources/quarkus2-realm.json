{
  "id" : "1822c17a-a4a2-4a10-91ef-60b6692701b5",
  "realm" : "quarkus2",
  "displayName" : "",
  "displayNameHtml" : "<h1>Openshift AI Roadshow</h1><br /><h3><a href=\"https://keycloak-https-ai-roadshow.apps.demo.openshift.sk/realms/quarkus2/account/\">Account Console</a></h3>",
  "notBefore" : 0,
  "defaultSignatureAlgorithm" : "RS256",
  "revokeRefreshToken" : false,
  "refreshTokenMaxReuse" : 0,
  "accessTokenLifespan" : 300,
  "accessTokenLifespanForImplicitFlow" : 900,
  "ssoSessionIdleTimeout" : 1800,
  "ssoSessionMaxLifespan" : 36000,
  "ssoSessionIdleTimeoutRememberMe" : 0,
  "ssoSessionMaxLifespanRememberMe" : 0,
  "offlineSessionIdleTimeout" : 2592000,
  "offlineSessionMaxLifespanEnabled" : false,
  "offlineSessionMaxLifespan" : 5184000,
  "clientSessionIdleTimeout" : 0,
  "clientSessionMaxLifespan" : 0,
  "clientOfflineSessionIdleTimeout" : 0,
  "clientOfflineSessionMaxLifespan" : 0,
  "accessCodeLifespan" : 60,
  "accessCodeLifespanUserAction" : 300,
  "accessCodeLifespanLogin" : 1800,
  "actionTokenGeneratedByAdminLifespan" : 43200,
  "actionTokenGeneratedByUserLifespan" : 300,
  "oauth2DeviceCodeLifespan" : 600,
  "oauth2DevicePollingInterval" : 5,
  "enabled" : true,
  "sslRequired" : "none",
  "registrationAllowed" : false,
  "registrationEmailAsUsername" : false,
  "rememberMe" : false,
  "verifyEmail" : false,
  "loginWithEmailAllowed" : true,
  "duplicateEmailsAllowed" : false,
  "resetPasswordAllowed" : false,
  "editUsernameAllowed" : false,
  "bruteForceProtected" : true,
  "permanentLockout" : false,
  "maxTemporaryLockouts" : 0,
  "maxFailureWaitSeconds" : 60,
  "minimumQuickLoginWaitSeconds" : 1,
  "waitIncrementSeconds" : 60,
  "quickLoginCheckMilliSeconds" : 1000,
  "maxDeltaTimeSeconds" : 3600,
  "failureFactor" : 60,
  "roles" : {
    "realm" : [ {
      "id" : "1a45d127-1fa9-4fcb-ae28-6b4fed3e095c",
      "name" : "ingestion",
      "description" : "",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "1822c17a-a4a2-4a10-91ef-60b6692701b5",
      "attributes" : { }
    }, {
      "id" : "3a51d6a1-0df7-4a3b-8294-0466820e0394",
      "name" : "detection",
      "description" : "",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "1822c17a-a4a2-4a10-91ef-60b6692701b5",
      "attributes" : { }
    }, {
      "id" : "5d744cc9-01b3-4813-a520-89cd818b89c9",
      "name" : "monitor",
      "description" : "",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "1822c17a-a4a2-4a10-91ef-60b6692701b5",
      "attributes" : { }
    }, {
      "id" : "2e4ec3d2-2630-4068-8fa9-c516d6abcdf2",
      "name" : "offline_access",
      "description" : "${role_offline-access}",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "1822c17a-a4a2-4a10-91ef-60b6692701b5",
      "attributes" : { }
    }, {
      "id" : "1540214f-4a23-49df-9ce9-72a67d28a83b",
      "name" : "admin",
      "description" : "",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "1822c17a-a4a2-4a10-91ef-60b6692701b5",
      "attributes" : { }
    }, {
      "id" : "870c495c-ad55-4c51-81c6-f333cba10146",
      "name" : "uma_authorization",
      "description" : "${role_uma_authorization}",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "1822c17a-a4a2-4a10-91ef-60b6692701b5",
      "attributes" : { }
    }, {
      "id" : "f9832dc1-cae6-447c-8145-c41ebe61bb41",
      "name" : "test",
      "description" : "",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "1822c17a-a4a2-4a10-91ef-60b6692701b5",
      "attributes" : {
        "acr" : [ "biometric" ]
      }
    }, {
      "id" : "1e0488c1-aa3b-40f8-b2cd-bed9bf59d02d",
      "name" : "default-roles-quarkus2",
      "description" : "${role_default-roles}",
      "composite" : true,
      "composites" : {
        "realm" : [ "offline_access", "uma_authorization" ],
        "client" : {
          "account" : [ "view-profile", "manage-account" ]
        }
      },
      "clientRole" : false,
      "containerId" : "1822c17a-a4a2-4a10-91ef-60b6692701b5",
      "attributes" : { }
    } ],
    "client" : {
      "_test_core-banking" : [ {
        "id" : "ef4ee92a-936e-4956-9a58-9e5b368364e8",
        "name" : "uma_protection",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "a7dd9c01-c89e-405b-bb2c-5bd3a60d3fbc",
        "attributes" : { }
      } ],
      "realm-management" : [ {
        "id" : "2e96777d-bc79-4e60-8c73-31283c856c26",
        "name" : "query-users",
        "description" : "${role_query-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "fa911a24-fb9a-4d30-b29a-26d9406e6254",
        "attributes" : { }
      }, {
        "id" : "f241c80b-c765-4895-92e6-c5b4134d625f",
        "name" : "query-groups",
        "description" : "${role_query-groups}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "fa911a24-fb9a-4d30-b29a-26d9406e6254",
        "attributes" : { }
      }, {
        "id" : "8bd6766f-ef59-4780-b873-1dfea9890067",
        "name" : "realm-admin",
        "description" : "${role_realm-admin}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-users", "query-groups", "view-clients", "view-users", "impersonation", "view-realm", "view-identity-providers", "create-client", "manage-authorization", "manage-events", "manage-users", "query-clients", "view-authorization", "view-events", "manage-clients", "manage-identity-providers", "manage-realm", "query-realms" ]
          }
        },
        "clientRole" : true,
        "containerId" : "fa911a24-fb9a-4d30-b29a-26d9406e6254",
        "attributes" : { }
      }, {
        "id" : "a549184b-f7fa-4418-b661-95f91be6c663",
        "name" : "view-clients",
        "description" : "${role_view-clients}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-clients" ]
          }
        },
        "clientRole" : true,
        "containerId" : "fa911a24-fb9a-4d30-b29a-26d9406e6254",
        "attributes" : { }
      }, {
        "id" : "d704d473-ebca-4bde-9f35-14e5e4aa4625",
        "name" : "view-users",
        "description" : "${role_view-users}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-users", "query-groups" ]
          }
        },
        "clientRole" : true,
        "containerId" : "fa911a24-fb9a-4d30-b29a-26d9406e6254",
        "attributes" : { }
      }, {
        "id" : "55c67bbb-8080-4ac7-b416-373565894f0a",
        "name" : "impersonation",
        "description" : "${role_impersonation}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "fa911a24-fb9a-4d30-b29a-26d9406e6254",
        "attributes" : { }
      }, {
        "id" : "85fb594d-811b-47f4-b0c5-2372cf3321da",
        "name" : "view-realm",
        "description" : "${role_view-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "fa911a24-fb9a-4d30-b29a-26d9406e6254",
        "attributes" : { }
      }, {
        "id" : "4f964a1f-d15c-4707-ac7f-2e99a5f9b248",
        "name" : "view-identity-providers",
        "description" : "${role_view-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "fa911a24-fb9a-4d30-b29a-26d9406e6254",
        "attributes" : { }
      }, {
        "id" : "22e956d0-7c0d-4b1a-a126-f1479de40ef0",
        "name" : "create-client",
        "description" : "${role_create-client}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "fa911a24-fb9a-4d30-b29a-26d9406e6254",
        "attributes" : { }
      }, {
        "id" : "17a92a97-966c-4031-9b74-cdde605493c0",
        "name" : "manage-authorization",
        "description" : "${role_manage-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "fa911a24-fb9a-4d30-b29a-26d9406e6254",
        "attributes" : { }
      }, {
        "id" : "68e655eb-453e-42c0-a7fb-b96a0375958b",
        "name" : "manage-events",
        "description" : "${role_manage-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "fa911a24-fb9a-4d30-b29a-26d9406e6254",
        "attributes" : { }
      }, {
        "id" : "26287276-217b-4200-8f6a-9918866cf6ad",
        "name" : "manage-users",
        "description" : "${role_manage-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "fa911a24-fb9a-4d30-b29a-26d9406e6254",
        "attributes" : { }
      }, {
        "id" : "5a9d3f4f-d4f4-4914-aad2-f683ed63776c",
        "name" : "query-clients",
        "description" : "${role_query-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "fa911a24-fb9a-4d30-b29a-26d9406e6254",
        "attributes" : { }
      }, {
        "id" : "1faea02a-308d-44f3-a836-d14bb7084608",
        "name" : "view-authorization",
        "description" : "${role_view-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "fa911a24-fb9a-4d30-b29a-26d9406e6254",
        "attributes" : { }
      }, {
        "id" : "8f5d6680-723f-4035-acae-b65aaf14f556",
        "name" : "manage-clients",
        "description" : "${role_manage-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "fa911a24-fb9a-4d30-b29a-26d9406e6254",
        "attributes" : { }
      }, {
        "id" : "55a8be05-73db-414d-9c36-b3fea40155ed",
        "name" : "view-events",
        "description" : "${role_view-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "fa911a24-fb9a-4d30-b29a-26d9406e6254",
        "attributes" : { }
      }, {
        "id" : "9652563f-1565-4b73-ab13-1b75365a9242",
        "name" : "manage-identity-providers",
        "description" : "${role_manage-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "fa911a24-fb9a-4d30-b29a-26d9406e6254",
        "attributes" : { }
      }, {
        "id" : "634c2201-eaff-4300-92fa-d4fd0c6b4d8c",
        "name" : "manage-realm",
        "description" : "${role_manage-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "fa911a24-fb9a-4d30-b29a-26d9406e6254",
        "attributes" : { }
      }, {
        "id" : "31e2eb56-ebcf-414d-8a83-e983ddc1cce5",
        "name" : "query-realms",
        "description" : "${role_query-realms}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "fa911a24-fb9a-4d30-b29a-26d9406e6254",
        "attributes" : { }
      } ],
      "edge-shopper" : [ {
        "id" : "b4831ee0-1f0a-4462-ba31-103be84b7c8d",
        "name" : "uma_protection",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "b94aa97d-c851-4bc6-8c7a-b480e06fffed",
        "attributes" : { }
      } ],
      "core-banking" : [ {
        "id" : "d8ef34ce-d5e3-4890-b054-1cb3df322306",
        "name" : "uma_protection",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "95f78cc9-1236-4821-a423-9fcd15326dd3",
        "attributes" : { }
      } ],
      "security-admin-console" : [ ],
      "admin-cli" : [ ],
      "account-console" : [ ],
      "broker" : [ {
        "id" : "1de8677e-1426-41f9-b873-5a5255ef612d",
        "name" : "read-token",
        "description" : "${role_read-token}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "bb7ae87d-bd33-41e3-b40b-8215c3ae4d69",
        "attributes" : { }
      } ],
      "internet-banking" : [ ],
      "account" : [ {
        "id" : "25662999-5085-4173-a400-c2c44d33858c",
        "name" : "view-groups",
        "description" : "${role_view-groups}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "4058cc13-22d0-484a-b8a2-eef851e3624b",
        "attributes" : { }
      }, {
        "id" : "9e3d5399-6dce-4266-ab33-c964d838c506",
        "name" : "view-profile",
        "description" : "${role_view-profile}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "4058cc13-22d0-484a-b8a2-eef851e3624b",
        "attributes" : { }
      }, {
        "id" : "5d765111-3315-4d19-985e-87aaaf18689d",
        "name" : "view-consent",
        "description" : "${role_view-consent}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "4058cc13-22d0-484a-b8a2-eef851e3624b",
        "attributes" : { }
      }, {
        "id" : "92546c9f-7b6f-446f-b041-e2297388a99e",
        "name" : "manage-account-links",
        "description" : "${role_manage-account-links}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "4058cc13-22d0-484a-b8a2-eef851e3624b",
        "attributes" : { }
      }, {
        "id" : "29c33029-7a67-4bcf-85b2-a00fb36c3800",
        "name" : "view-applications",
        "description" : "${role_view-applications}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "4058cc13-22d0-484a-b8a2-eef851e3624b",
        "attributes" : { }
      }, {
        "id" : "201a3760-65de-4e71-a596-20235c6623bf",
        "name" : "delete-account",
        "description" : "${role_delete-account}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "4058cc13-22d0-484a-b8a2-eef851e3624b",
        "attributes" : { }
      }, {
        "id" : "3192165f-477a-4b4f-b9f5-83278538af33",
        "name" : "manage-consent",
        "description" : "${role_manage-consent}",
        "composite" : true,
        "composites" : {
          "client" : {
            "account" : [ "view-consent" ]
          }
        },
        "clientRole" : true,
        "containerId" : "4058cc13-22d0-484a-b8a2-eef851e3624b",
        "attributes" : { }
      }, {
        "id" : "a9497cdd-b288-4bfc-9060-5a075dc32db4",
        "name" : "manage-account",
        "description" : "${role_manage-account}",
        "composite" : true,
        "composites" : {
          "client" : {
            "account" : [ "manage-account-links" ]
          }
        },
        "clientRole" : true,
        "containerId" : "4058cc13-22d0-484a-b8a2-eef851e3624b",
        "attributes" : { }
      } ]
    }
  },
  "groups" : [ ],
  "defaultRole" : {
    "id" : "1e0488c1-aa3b-40f8-b2cd-bed9bf59d02d",
    "name" : "default-roles-quarkus2",
    "description" : "${role_default-roles}",
    "composite" : true,
    "clientRole" : false,
    "containerId" : "1822c17a-a4a2-4a10-91ef-60b6692701b5"
  },
  "requiredCredentials" : [ "password" ],
  "otpPolicyType" : "totp",
  "otpPolicyAlgorithm" : "HmacSHA1",
  "otpPolicyInitialCounter" : 0,
  "otpPolicyDigits" : 6,
  "otpPolicyLookAheadWindow" : 1,
  "otpPolicyPeriod" : 30,
  "otpPolicyCodeReusable" : false,
  "otpSupportedApplications" : [ "totpAppFreeOTPName", "totpAppGoogleName", "totpAppMicrosoftAuthenticatorName" ],
  "localizationTexts" : { },
  "webAuthnPolicyRpEntityName" : "keycloak",
  "webAuthnPolicySignatureAlgorithms" : [ "ES256" ],
  "webAuthnPolicyRpId" : "",
  "webAuthnPolicyAttestationConveyancePreference" : "not specified",
  "webAuthnPolicyAuthenticatorAttachment" : "not specified",
  "webAuthnPolicyRequireResidentKey" : "not specified",
  "webAuthnPolicyUserVerificationRequirement" : "not specified",
  "webAuthnPolicyCreateTimeout" : 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister" : false,
  "webAuthnPolicyAcceptableAaguids" : [ ],
  "webAuthnPolicyExtraOrigins" : [ ],
  "webAuthnPolicyPasswordlessRpEntityName" : "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms" : [ "ES256" ],
  "webAuthnPolicyPasswordlessRpId" : "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference" : "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment" : "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey" : "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement" : "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout" : 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister" : false,
  "webAuthnPolicyPasswordlessAcceptableAaguids" : [ ],
  "webAuthnPolicyPasswordlessExtraOrigins" : [ ],
  "scopeMappings" : [ {
    "clientScope" : "offline_access",
    "roles" : [ "offline_access" ]
  } ],
  "clientScopeMappings" : {
    "account" : [ {
      "client" : "account-console",
      "roles" : [ "manage-account", "view-groups" ]
    } ]
  },
  "clients" : [ {
    "id" : "a7dd9c01-c89e-405b-bb2c-5bd3a60d3fbc",
    "clientId" : "_test_core-banking",
    "name" : "Testing autorizacie s contextom",
    "description" : "",
    "rootUrl" : "",
    "adminUrl" : "",
    "baseUrl" : "",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "secret" : "secret",
    "redirectUris" : [ "/*" ],
    "webOrigins" : [ "/*" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : false,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : true,
    "authorizationServicesEnabled" : true,
    "publicClient" : false,
    "frontchannelLogout" : true,
    "protocol" : "openid-connect",
    "attributes" : {
      "oidc.ciba.grant.enabled" : "false",
      "client.secret.creation.time" : "1715883258",
      "backchannel.logout.session.required" : "true",
      "post.logout.redirect.uris" : "+",
      "display.on.consent.screen" : "false",
      "oauth2.device.authorization.grant.enabled" : "false",
      "backchannel.logout.revoke.offline.tokens" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "protocolMappers" : [ {
      "id" : "c3c13740-7f30-4498-8cdc-f87d4012916d",
      "name" : "Client IP Address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientAddress",
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientAddress",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "d67166ea-5356-42d8-9108-d2e81ca98ada",
      "name" : "Client Host",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientHost",
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientHost",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "716c65d9-b3a6-44d2-b288-f10f148bcba0",
      "name" : "Client ID",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "client_id",
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "client_id",
        "jsonType.label" : "String"
      }
    } ],
    "defaultClientScopes" : [ "scope_ucet_read", "roles", "profile", "_test_acr_biometric", "scope_ucet_write", "basic" ],
    "optionalClientScopes" : [ "offline_access" ],
    "authorizationSettings" : {
      "allowRemoteResourceManagement" : true,
      "policyEnforcementMode" : "ENFORCING",
      "resources" : [ {
        "name" : "Funds Endpoints",
        "type" : "UcetWrite",
        "ownerManagedAccess" : false,
        "displayName" : "",
        "attributes" : { },
        "uris" : [ "/core/api/funds/*" ],
        "icon_uri" : ""
      }, {
        "name" : "Balance Endpoint",
        "type" : "UcetRead",
        "ownerManagedAccess" : false,
        "displayName" : "Balance Endpoint",
        "attributes" : { },
        "uris" : [ "/core/api/balance/*" ],
        "icon_uri" : ""
      } ],
      "policies" : [ {
        "name" : "Prihlasený cez biometriu",
        "description" : "",
        "type" : "regex",
        "logic" : "POSITIVE",
        "decisionStrategy" : "UNANIMOUS",
        "config" : {
          "pattern" : "biometric1?",
          "targetClaim" : "acr"
        }
      }, {
        "name" : "scope_ucet_write",
        "description" : "",
        "type" : "client-scope",
        "logic" : "POSITIVE",
        "decisionStrategy" : "UNANIMOUS",
        "config" : {
          "clientScopes" : "[{\"id\":\"scope_ucet_write\",\"required\":false}]"
        }
      }, {
        "name" : "scope_ucet_read",
        "description" : "",
        "type" : "client-scope",
        "logic" : "POSITIVE",
        "decisionStrategy" : "UNANIMOUS",
        "config" : {
          "clientScopes" : "[{\"id\":\"scope_ucet_read\",\"required\":false}]"
        }
      }, {
        "name" : "Prístup k ReadResources",
        "description" : "",
        "type" : "resource",
        "logic" : "POSITIVE",
        "decisionStrategy" : "UNANIMOUS",
        "config" : {
          "defaultResourceType" : "UcetRead",
          "resources" : "[\"Balance Endpoint\"]",
          "applyPolicies" : "[\"scope_ucet_read\"]"
        }
      } ],
      "scopes" : [ ],
      "decisionStrategy" : "UNANIMOUS"
    }
  }, {
    "id" : "4058cc13-22d0-484a-b8a2-eef851e3624b",
    "clientId" : "account",
    "name" : "${client_account}",
    "rootUrl" : "${authBaseUrl}",
    "baseUrl" : "/realms/quarkus2/account/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/realms/quarkus2/account/*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "post.logout.redirect.uris" : "+"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "6f901fbd-fa9f-44cd-8c5e-aa3ab3d55713",
    "clientId" : "account-console",
    "name" : "${client_account-console}",
    "description" : "",
    "rootUrl" : "${authBaseUrl}",
    "adminUrl" : "",
    "baseUrl" : "/realms/quarkus2/account/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/realms/quarkus2/account/*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "post.logout.redirect.uris" : "+",
      "oauth2.device.authorization.grant.enabled" : "false",
      "backchannel.logout.revoke.offline.tokens" : "false",
      "use.refresh.tokens" : "true",
      "oidc.ciba.grant.enabled" : "false",
      "backchannel.logout.session.required" : "true",
      "client_credentials.use_refresh_token" : "false",
      "acr.loa.map" : "{}",
      "require.pushed.authorization.requests" : "false",
      "tls.client.certificate.bound.access.tokens" : "false",
      "display.on.consent.screen" : "false",
      "pkce.code.challenge.method" : "S256",
      "token.response.type.bearer.lower-case" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "e314ee80-dca7-4c66-83bf-f2df95915f24",
      "name" : "audience resolve",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-resolve-mapper",
      "consentRequired" : false,
      "config" : { }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "685a1835-dfb5-4f13-a8e0-b79863ce5fb4",
    "clientId" : "admin-cli",
    "name" : "${client_admin-cli}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : false,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "post.logout.redirect.uris" : "+"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "bb7ae87d-bd33-41e3-b40b-8215c3ae4d69",
    "clientId" : "broker",
    "name" : "${client_broker}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : true,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "post.logout.redirect.uris" : "+"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "95f78cc9-1236-4821-a423-9fcd15326dd3",
    "clientId" : "core-banking",
    "name" : "",
    "description" : "",
    "rootUrl" : "",
    "adminUrl" : "",
    "baseUrl" : "",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "secret" : "secret",
    "redirectUris" : [ "*" ],
    "webOrigins" : [ "*" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : true,
    "authorizationServicesEnabled" : true,
    "publicClient" : false,
    "frontchannelLogout" : true,
    "protocol" : "openid-connect",
    "attributes" : {
      "oidc.ciba.grant.enabled" : "false",
      "client.secret.creation.time" : "1714856810",
      "backchannel.logout.session.required" : "true",
      "post.logout.redirect.uris" : "+",
      "display.on.consent.screen" : "false",
      "oauth2.device.authorization.grant.enabled" : "false",
      "backchannel.logout.revoke.offline.tokens" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "protocolMappers" : [ {
      "id" : "bd0a6281-bbdf-48d7-a029-ee69ec3dd306",
      "name" : "Client IP Address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientAddress",
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientAddress",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "65b8b896-88db-47df-aa4c-118878214ab3",
      "name" : "Client ID",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "client_id",
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "client_id",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "8cfc971b-755a-4505-b56a-5d1ac21b5949",
      "name" : "Client Host",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientHost",
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientHost",
        "jsonType.label" : "String"
      }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "scope_ucet_read", "address", "phone", "offline_access", "scope_ucet_write", "microprofile-jwt" ],
    "authorizationSettings" : {
      "allowRemoteResourceManagement" : true,
      "policyEnforcementMode" : "ENFORCING",
      "resources" : [ {
        "name" : "index",
        "ownerManagedAccess" : false,
        "displayName" : "",
        "attributes" : { },
        "uris" : [ "/*" ],
        "icon_uri" : ""
      }, {
        "name" : "Funds Endpoints",
        "type" : "UcetWrite",
        "ownerManagedAccess" : false,
        "displayName" : "Funds Endpoints",
        "attributes" : { },
        "uris" : [ "/core/api/funds/*" ],
        "icon_uri" : ""
      }, {
        "name" : "Balance Endpoint",
        "type" : "UcetRead",
        "ownerManagedAccess" : false,
        "displayName" : "Balance Endpoint",
        "attributes" : { },
        "uris" : [ "/core/api/balance/*" ],
        "icon_uri" : ""
      } ],
      "policies" : [ {
        "name" : "Prihlasený cez biometriu",
        "description" : "",
        "type" : "regex",
        "logic" : "POSITIVE",
        "decisionStrategy" : "UNANIMOUS",
        "config" : {
          "pattern" : "biometric1?",
          "targetClaim" : "acr"
        }
      }, {
        "name" : "scope_ucet_write",
        "description" : "",
        "type" : "client-scope",
        "logic" : "POSITIVE",
        "decisionStrategy" : "UNANIMOUS",
        "config" : {
          "clientScopes" : "[{\"id\":\"scope_ucet_write\",\"required\":false}]"
        }
      }, {
        "name" : "scope_ucet_read",
        "description" : "",
        "type" : "client-scope",
        "logic" : "POSITIVE",
        "decisionStrategy" : "UNANIMOUS",
        "config" : {
          "clientScopes" : "[{\"id\":\"scope_ucet_read\",\"required\":false}]"
        }
      } ],
      "scopes" : [ ],
      "decisionStrategy" : "UNANIMOUS"
    }
  }, {
    "id" : "b94aa97d-c851-4bc6-8c7a-b480e06fffed",
    "clientId" : "edge-shopper",
    "name" : "",
    "description" : "",
    "rootUrl" : "",
    "adminUrl" : "",
    "baseUrl" : "",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "secret" : "secret",
    "redirectUris" : [ "*" ],
    "webOrigins" : [ "*" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : true,
    "authorizationServicesEnabled" : true,
    "publicClient" : false,
    "frontchannelLogout" : true,
    "protocol" : "openid-connect",
    "attributes" : {
      "client.secret.creation.time" : "1714856810",
      "client.introspection.response.allow.jwt.claim.enabled" : "false",
      "post.logout.redirect.uris" : "+",
      "oauth2.device.authorization.grant.enabled" : "false",
      "backchannel.logout.revoke.offline.tokens" : "false",
      "use.refresh.tokens" : "true",
      "oidc.ciba.grant.enabled" : "false",
      "client.use.lightweight.access.token.enabled" : "false",
      "backchannel.logout.session.required" : "true",
      "client_credentials.use_refresh_token" : "false",
      "tls.client.certificate.bound.access.tokens" : "false",
      "require.pushed.authorization.requests" : "false",
      "acr.loa.map" : "{}",
      "display.on.consent.screen" : "false",
      "token.response.type.bearer.lower-case" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "protocolMappers" : [ {
      "id" : "835b7b9a-faf8-4350-81ab-db2ad942068f",
      "name" : "Client IP Address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientAddress",
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientAddress",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "84429310-f82a-4868-91ed-e8468e1a35c8",
      "name" : "Client Host",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientHost",
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientHost",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "d5f186a1-d9d3-4a24-b83f-e5626ac2d308",
      "name" : "Client ID",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "client_id",
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "client_id",
        "jsonType.label" : "String"
      }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "scope_ucet_read", "address", "phone", "offline_access", "scope_ucet_write", "microprofile-jwt" ],
    "authorizationSettings" : {
      "allowRemoteResourceManagement" : true,
      "policyEnforcementMode" : "ENFORCING",
      "resources" : [ {
        "name" : "ingestion.html",
        "type" : "ingestion",
        "ownerManagedAccess" : false,
        "displayName" : "",
        "attributes" : { },
        "uris" : [ "/ingestion.html" ],
        "icon_uri" : ""
      }, {
        "name" : "detection.html",
        "type" : "detection",
        "ownerManagedAccess" : false,
        "displayName" : "",
        "attributes" : { },
        "uris" : [ "/detection.html" ],
        "icon_uri" : ""
      }, {
        "name" : "admin.html",
        "type" : "admin",
        "ownerManagedAccess" : false,
        "displayName" : "",
        "attributes" : { },
        "uris" : [ "/admin.html" ],
        "icon_uri" : ""
      }, {
        "name" : "Default Resource",
        "type" : "urn:edge-shopper:resources:default",
        "ownerManagedAccess" : false,
        "attributes" : { },
        "uris" : [ "/*" ]
      } ],
      "policies" : [ {
        "name" : "user has used biometric login as a second factor",
        "description" : "",
        "type" : "regex",
        "logic" : "POSITIVE",
        "decisionStrategy" : "UNANIMOUS",
        "config" : {
          "pattern" : "biometric-2ndfactor",
          "targetContextAttributes" : "false",
          "targetClaim" : "acr"
        }
      }, {
        "name" : "user has used biometric login",
        "description" : "",
        "type" : "regex",
        "logic" : "POSITIVE",
        "decisionStrategy" : "UNANIMOUS",
        "config" : {
          "pattern" : "biometric",
          "targetContextAttributes" : "false",
          "targetClaim" : "acr"
        }
      }, {
        "name" : "either use of biometric",
        "description" : "",
        "type" : "aggregate",
        "logic" : "POSITIVE",
        "decisionStrategy" : "AFFIRMATIVE",
        "config" : {
          "applyPolicies" : "[\"user has used biometric login as a second factor\",\"user has used biometric login\"]"
        }
      }, {
        "name" : "user is logged in",
        "description" : "",
        "type" : "role",
        "logic" : "POSITIVE",
        "decisionStrategy" : "UNANIMOUS",
        "config" : {
          "fetchRoles" : "false",
          "roles" : "[{\"id\":\"default-roles-quarkus2\",\"required\":false}]"
        }
      }, {
        "name" : "user has admin role in token",
        "description" : "",
        "type" : "role",
        "logic" : "POSITIVE",
        "decisionStrategy" : "UNANIMOUS",
        "config" : {
          "fetchRoles" : "false",
          "roles" : "[{\"id\":\"admin\",\"required\":false}]"
        }
      }, {
        "name" : "user has monitor role in token",
        "description" : "",
        "type" : "role",
        "logic" : "POSITIVE",
        "decisionStrategy" : "UNANIMOUS",
        "config" : {
          "fetchRoles" : "false",
          "roles" : "[{\"id\":\"monitor\",\"required\":false}]"
        }
      }, {
        "name" : "user has ingestion role in token",
        "description" : "",
        "type" : "role",
        "logic" : "POSITIVE",
        "decisionStrategy" : "UNANIMOUS",
        "config" : {
          "fetchRoles" : "false",
          "roles" : "[{\"id\":\"ingestion\",\"required\":false}]"
        }
      }, {
        "name" : "user has detection role in token",
        "description" : "",
        "type" : "role",
        "logic" : "POSITIVE",
        "decisionStrategy" : "UNANIMOUS",
        "config" : {
          "fetchRoles" : "false",
          "roles" : "[{\"id\":\"detection\",\"required\":false}]"
        }
      }, {
        "name" : "permission to access detection page",
        "description" : "",
        "type" : "resource",
        "logic" : "POSITIVE",
        "decisionStrategy" : "UNANIMOUS",
        "config" : {
          "resources" : "[\"detection.html\"]",
          "applyPolicies" : "[\"user has detection role in token\",\"either use of biometric\"]"
        }
      }, {
        "name" : "default_permission",
        "description" : "",
        "type" : "resource",
        "logic" : "POSITIVE",
        "decisionStrategy" : "UNANIMOUS",
        "config" : {
          "resources" : "[\"Default Resource\"]",
          "applyPolicies" : "[\"user is logged in\"]"
        }
      } ],
      "scopes" : [ ],
      "decisionStrategy" : "UNANIMOUS"
    }
  }, {
    "id" : "624dc5ef-2ae5-42b1-984b-5dcb5ac06e8f",
    "clientId" : "internet-banking",
    "name" : "Internet Banking",
    "description" : "",
    "rootUrl" : "",
    "adminUrl" : "",
    "baseUrl" : "",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "secret" : "secret",
    "redirectUris" : [ "*" ],
    "webOrigins" : [ "*" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : true,
    "protocol" : "openid-connect",
    "attributes" : {
      "client.secret.creation.time" : "1715789728",
      "post.logout.redirect.uris" : "+",
      "oauth2.device.authorization.grant.enabled" : "false",
      "backchannel.logout.revoke.offline.tokens" : "false",
      "use.refresh.tokens" : "true",
      "oidc.ciba.grant.enabled" : "false",
      "backchannel.logout.session.required" : "true",
      "client_credentials.use_refresh_token" : "false",
      "acr.loa.map" : "{}",
      "require.pushed.authorization.requests" : "false",
      "tls.client.certificate.bound.access.tokens" : "false",
      "display.on.consent.screen" : "false",
      "token.response.type.bearer.lower-case" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "microprofile-jwt", "basic", "email" ],
    "optionalClientScopes" : [ "scope_ucet_read", "address", "phone", "offline_access", "scope_ucet_write" ]
  }, {
    "id" : "fa911a24-fb9a-4d30-b29a-26d9406e6254",
    "clientId" : "realm-management",
    "name" : "${client_realm-management}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : true,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "post.logout.redirect.uris" : "+"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "c4514721-3337-4a25-bd5b-139f5032eef8",
    "clientId" : "security-admin-console",
    "name" : "${client_security-admin-console}",
    "rootUrl" : "${authAdminUrl}",
    "baseUrl" : "/admin/quarkus2/console/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/admin/quarkus2/console/*" ],
    "webOrigins" : [ "+" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "post.logout.redirect.uris" : "+",
      "pkce.code.challenge.method" : "S256"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "00cc665d-3299-4873-bf17-db34668ce298",
      "name" : "locale",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "locale",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "locale",
        "jsonType.label" : "String"
      }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  } ],
  "clientScopes" : [ {
    "id" : "a0545b53-f9bc-40e8-89f3-1e430d1cc578",
    "name" : "web-origins",
    "description" : "OpenID Connect scope for add allowed web origins to the access token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "consent.screen.text" : "",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "3d0b75fc-b7a7-4e1a-a1f8-53a095990e8c",
      "name" : "allowed web origins",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-allowed-origins-mapper",
      "consentRequired" : false,
      "config" : {
        "access.token.claim" : "true",
        "introspection.token.claim" : "true"
      }
    } ]
  }, {
    "id" : "b1f7471d-cdd2-424a-ae4d-18fbf4548104",
    "name" : "role_list",
    "description" : "SAML role list",
    "protocol" : "saml",
    "attributes" : {
      "consent.screen.text" : "${samlRoleListScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "725d1fe6-4e2b-47bb-82ae-3bca17715a7d",
      "name" : "role list",
      "protocol" : "saml",
      "protocolMapper" : "saml-role-list-mapper",
      "consentRequired" : false,
      "config" : {
        "single" : "false",
        "attribute.nameformat" : "Basic",
        "attribute.name" : "Role"
      }
    } ]
  }, {
    "id" : "72a69c64-b585-44a8-a798-c995c6362385",
    "name" : "email",
    "description" : "OpenID Connect built-in scope: email",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "consent.screen.text" : "${emailScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "36f5f479-a162-4214-8c47-fd00ffa8fd62",
      "name" : "email verified",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "emailVerified",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email_verified",
        "jsonType.label" : "boolean"
      }
    }, {
      "id" : "2bdb8a29-6f5d-4771-9092-cb9d10980807",
      "name" : "email",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "email",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "9b82461a-3780-4e4b-a84a-303b8c131513",
    "name" : "profile",
    "description" : "OpenID Connect built-in scope: profile",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "consent.screen.text" : "${profileScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "691a1369-c4e3-4a81-897e-4bc5ac49580c",
      "name" : "gender",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "gender",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "gender",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "5a7971ef-89ed-4f7f-b15a-89ce9542128c",
      "name" : "birthdate",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "birthdate",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "birthdate",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "93d60927-a972-4a47-bc40-aba66e65df59",
      "name" : "full name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-full-name-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "userinfo.token.claim" : "true"
      }
    }, {
      "id" : "0f570eee-b86f-4be3-b768-edd253beb8fc",
      "name" : "locale",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "locale",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "locale",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "ddbde47a-f921-4209-aae9-df9cc77a4e73",
      "name" : "nickname",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "nickname",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "nickname",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "419f3247-10d5-4cc0-a085-111ab88ad225",
      "name" : "family name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "lastName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "family_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "5a959edd-a91e-47ac-82d4-c78dc482600e",
      "name" : "username",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "preferred_username",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "1191d754-1a79-40ff-a941-b4ba55dca63c",
      "name" : "picture",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "picture",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "picture",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "9ef47f8d-018e-4f9b-ae9a-b9f15315cdef",
      "name" : "zoneinfo",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "zoneinfo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "zoneinfo",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "bf74e908-9922-43a1-9d2c-a35621db6cd2",
      "name" : "profile",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "profile",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "profile",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "f12f0b62-8e76-467d-8946-1d41c80fa9ab",
      "name" : "middle name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "middleName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "middle_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "5c1a2dab-1cba-491d-b9e2-d026a2d7d13f",
      "name" : "website",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "website",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "website",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "9285020e-4efb-4329-b53f-29981d571674",
      "name" : "given name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "firstName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "given_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "a8f45506-cf98-44e5-87d8-cedde555fb05",
      "name" : "updated at",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "updatedAt",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "updated_at",
        "jsonType.label" : "long"
      }
    } ]
  }, {
    "id" : "d2100a96-3e1b-455a-93a4-1f4218f2210c",
    "name" : "address",
    "description" : "OpenID Connect built-in scope: address",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "consent.screen.text" : "${addressScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "ddf5757a-b356-4b27-b5e9-65ebb4c4b8a5",
      "name" : "address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-address-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute.formatted" : "formatted",
        "user.attribute.country" : "country",
        "introspection.token.claim" : "true",
        "user.attribute.postal_code" : "postal_code",
        "userinfo.token.claim" : "true",
        "user.attribute.street" : "street",
        "id.token.claim" : "true",
        "user.attribute.region" : "region",
        "access.token.claim" : "true",
        "user.attribute.locality" : "locality"
      }
    } ]
  }, {
    "id" : "1fab8d1a-e29d-4e6b-8f8e-e121cb92355e",
    "name" : "acr",
    "description" : "OpenID Connect scope for add acr (authentication context class reference) to the token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "7057a418-de05-4a84-aea1-f2c684b87c60",
      "name" : "acr loa level",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-acr-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true"
      }
    } ]
  }, {
    "id" : "f3277f8e-fc44-473e-bc82-6d73e41967af",
    "name" : "_test_acr_biometric",
    "description" : "",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false",
      "gui.order" : "",
      "consent.screen.text" : ""
    },
    "protocolMappers" : [ {
      "id" : "62d4524a-ac10-467f-83d9-76eff3119536",
      "name" : "acr_biometric",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-hardcoded-claim-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "claim.value" : "biometric1",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "acr",
        "jsonType.label" : "String",
        "access.tokenResponse.claim" : "true"
      }
    } ]
  }, {
    "id" : "406f33da-cf3e-4257-9df3-28a7f605b04b",
    "name" : "phone",
    "description" : "OpenID Connect built-in scope: phone",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "consent.screen.text" : "${phoneScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "ac97122a-1022-4c26-97b0-8a8a52d8da7c",
      "name" : "phone number verified",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "phoneNumberVerified",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "phone_number_verified",
        "jsonType.label" : "boolean"
      }
    }, {
      "id" : "e8490ebe-63aa-436b-a0c3-86da319f32c8",
      "name" : "phone number",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "phoneNumber",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "phone_number",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "41954972-cc97-4d96-ac27-f29332ef6907",
    "name" : "roles",
    "description" : "OpenID Connect scope for add user roles to the access token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "consent.screen.text" : "${rolesScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "960174c0-def3-47a1-80e7-68f5c62bfe6f",
      "name" : "client roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-client-role-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "foo",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "resource_access.${client_id}.roles",
        "jsonType.label" : "String",
        "multivalued" : "true"
      }
    }, {
      "id" : "13d42503-7051-4931-b02d-42455f86c017",
      "name" : "realm roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "foo",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "realm_access.roles",
        "jsonType.label" : "String",
        "multivalued" : "true"
      }
    }, {
      "id" : "f2ebfba6-de2f-4446-a66d-136a6516c276",
      "name" : "audience resolve",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-resolve-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "access.token.claim" : "true"
      }
    } ]
  }, {
    "id" : "d256ca02-0399-4542-8a61-9dc6d592118a",
    "name" : "scope_ucet_read",
    "description" : "",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "gui.order" : "",
      "consent.screen.text" : ""
    }
  }, {
    "id" : "cf73d726-3073-42a1-a07b-5aab46b7dd1c",
    "name" : "microprofile-jwt",
    "description" : "Microprofile - JWT built-in scope",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "1f0a09bd-b0dc-408a-80e7-aaf08c08a0da",
      "name" : "upn",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "upn",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "9910f6ab-f0b4-4caa-ba09-ab65271cabc4",
      "name" : "groups",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "multivalued" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "foo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "groups",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "05254c41-40b5-461c-92c8-6db87b6cce69",
    "name" : "offline_access",
    "description" : "OpenID Connect built-in scope: offline_access",
    "protocol" : "openid-connect",
    "attributes" : {
      "consent.screen.text" : "${offlineAccessScopeConsentText}",
      "display.on.consent.screen" : "true"
    }
  }, {
    "id" : "63b79770-8270-487e-908e-84272f651a20",
    "name" : "scope_ucet_write",
    "description" : "",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "gui.order" : "",
      "consent.screen.text" : ""
    }
  }, {
    "id" : "ec41f394-5dd4-4ecd-83e6-469a963d2c68",
    "name" : "basic",
    "description" : "OpenID Connect scope for add all basic claims to the token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "e6cd780d-82bd-4d56-ace0-b34fdcce38b4",
      "name" : "auth_time",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "AUTH_TIME",
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "auth_time",
        "jsonType.label" : "long"
      }
    }, {
      "id" : "9da2589c-5d62-49ab-98fb-4929beffc685",
      "name" : "sub",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-sub-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "access.token.claim" : "true"
      }
    } ]
  } ],
  "defaultDefaultClientScopes" : [ "role_list", "profile", "email", "roles", "web-origins", "acr", "basic" ],
  "defaultOptionalClientScopes" : [ "offline_access", "address", "phone", "microprofile-jwt" ],
  "browserSecurityHeaders" : {
    "contentSecurityPolicyReportOnly" : "",
    "xContentTypeOptions" : "nosniff",
    "referrerPolicy" : "no-referrer",
    "xRobotsTag" : "none",
    "xFrameOptions" : "SAMEORIGIN",
    "contentSecurityPolicy" : "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection" : "1; mode=block",
    "strictTransportSecurity" : "max-age=31536000; includeSubDomains"
  },
  "smtpServer" : { },
  "eventsEnabled" : true,
  "eventsListeners" : [ "jboss-logging" ],
  "enabledEventTypes" : [ "SEND_RESET_PASSWORD", "UPDATE_CONSENT_ERROR", "GRANT_CONSENT", "VERIFY_PROFILE_ERROR", "REMOVE_TOTP", "REVOKE_GRANT", "UPDATE_TOTP", "LOGIN_ERROR", "CLIENT_LOGIN", "RESET_PASSWORD_ERROR", "IMPERSONATE_ERROR", "CODE_TO_TOKEN_ERROR", "CUSTOM_REQUIRED_ACTION", "OAUTH2_DEVICE_CODE_TO_TOKEN_ERROR", "RESTART_AUTHENTICATION", "IMPERSONATE", "UPDATE_PROFILE_ERROR", "LOGIN", "OAUTH2_DEVICE_VERIFY_USER_CODE", "UPDATE_PASSWORD_ERROR", "CLIENT_INITIATED_ACCOUNT_LINKING", "USER_DISABLED_BY_PERMANENT_LOCKOUT", "TOKEN_EXCHANGE", "AUTHREQID_TO_TOKEN", "LOGOUT", "REGISTER", "DELETE_ACCOUNT_ERROR", "CLIENT_REGISTER", "IDENTITY_PROVIDER_LINK_ACCOUNT", "DELETE_ACCOUNT", "UPDATE_PASSWORD", "CLIENT_DELETE", "FEDERATED_IDENTITY_LINK_ERROR", "IDENTITY_PROVIDER_FIRST_LOGIN", "CLIENT_DELETE_ERROR", "VERIFY_EMAIL", "CLIENT_LOGIN_ERROR", "RESTART_AUTHENTICATION_ERROR", "EXECUTE_ACTIONS", "REMOVE_FEDERATED_IDENTITY_ERROR", "TOKEN_EXCHANGE_ERROR", "PERMISSION_TOKEN", "SEND_IDENTITY_PROVIDER_LINK_ERROR", "EXECUTE_ACTION_TOKEN_ERROR", "SEND_VERIFY_EMAIL", "OAUTH2_DEVICE_AUTH", "EXECUTE_ACTIONS_ERROR", "REMOVE_FEDERATED_IDENTITY", "OAUTH2_DEVICE_CODE_TO_TOKEN", "IDENTITY_PROVIDER_POST_LOGIN", "IDENTITY_PROVIDER_LINK_ACCOUNT_ERROR", "OAUTH2_DEVICE_VERIFY_USER_CODE_ERROR", "UPDATE_EMAIL", "REGISTER_ERROR", "REVOKE_GRANT_ERROR", "EXECUTE_ACTION_TOKEN", "LOGOUT_ERROR", "UPDATE_EMAIL_ERROR", "CLIENT_UPDATE_ERROR", "AUTHREQID_TO_TOKEN_ERROR", "UPDATE_PROFILE", "CLIENT_REGISTER_ERROR", "FEDERATED_IDENTITY_LINK", "SEND_IDENTITY_PROVIDER_LINK", "SEND_VERIFY_EMAIL_ERROR", "RESET_PASSWORD", "CLIENT_INITIATED_ACCOUNT_LINKING_ERROR", "OAUTH2_DEVICE_AUTH_ERROR", "UPDATE_CONSENT", "REMOVE_TOTP_ERROR", "VERIFY_EMAIL_ERROR", "SEND_RESET_PASSWORD_ERROR", "CLIENT_UPDATE", "CUSTOM_REQUIRED_ACTION_ERROR", "IDENTITY_PROVIDER_POST_LOGIN_ERROR", "UPDATE_TOTP_ERROR", "CODE_TO_TOKEN", "VERIFY_PROFILE", "GRANT_CONSENT_ERROR", "IDENTITY_PROVIDER_FIRST_LOGIN_ERROR" ],
  "adminEventsEnabled" : true,
  "adminEventsDetailsEnabled" : false,
  "identityProviders" : [ ],
  "identityProviderMappers" : [ ],
  "components" : {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy" : [ {
      "id" : "6de4f906-8ab9-4a0d-8d55-25148e305092",
      "name" : "Full Scope Disabled",
      "providerId" : "scope",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : { }
    }, {
      "id" : "9dc72caf-4508-48f8-b9f6-0d6f21d178ac",
      "name" : "Max Clients Limit",
      "providerId" : "max-clients",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "max-clients" : [ "200" ]
      }
    }, {
      "id" : "0268ca4d-d65a-44c8-b74e-de9f68b01737",
      "name" : "Allowed Protocol Mapper Types",
      "providerId" : "allowed-protocol-mappers",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "allowed-protocol-mapper-types" : [ "saml-role-list-mapper", "oidc-usermodel-property-mapper", "saml-user-property-mapper", "oidc-full-name-mapper", "oidc-address-mapper", "oidc-usermodel-attribute-mapper", "saml-user-attribute-mapper", "oidc-sha256-pairwise-sub-mapper" ]
      }
    }, {
      "id" : "2a8d0b8c-b643-4c35-afe5-69028678758e",
      "name" : "Consent Required",
      "providerId" : "consent-required",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : { }
    }, {
      "id" : "f2ef7c72-b5b1-4c6d-9236-0b24bb9401e3",
      "name" : "Allowed Client Scopes",
      "providerId" : "allowed-client-templates",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "allow-default-scopes" : [ "true" ]
      }
    }, {
      "id" : "0e6cafd0-47d5-4d3b-9e63-82a4d578b2a8",
      "name" : "Allowed Client Scopes",
      "providerId" : "allowed-client-templates",
      "subType" : "authenticated",
      "subComponents" : { },
      "config" : {
        "allow-default-scopes" : [ "true" ]
      }
    }, {
      "id" : "ad70a131-cd77-442a-9a61-a5bebe798bcc",
      "name" : "Allowed Protocol Mapper Types",
      "providerId" : "allowed-protocol-mappers",
      "subType" : "authenticated",
      "subComponents" : { },
      "config" : {
        "allowed-protocol-mapper-types" : [ "oidc-sha256-pairwise-sub-mapper", "oidc-usermodel-property-mapper", "oidc-address-mapper", "saml-role-list-mapper", "oidc-usermodel-attribute-mapper", "saml-user-property-mapper", "saml-user-attribute-mapper", "oidc-full-name-mapper" ]
      }
    }, {
      "id" : "aedfc21a-047a-4041-867a-524cb0fed869",
      "name" : "Trusted Hosts",
      "providerId" : "trusted-hosts",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "host-sending-registration-request-must-match" : [ "true" ],
        "client-uris-must-match" : [ "true" ]
      }
    } ],
    "org.keycloak.userprofile.UserProfileProvider" : [ {
      "id" : "e29f5b09-ce8e-42f8-b3e0-82a7db630385",
      "providerId" : "declarative-user-profile",
      "subComponents" : { },
      "config" : {
        "kc.user.profile.config" : [ "{\"attributes\":[{\"name\":\"username\",\"displayName\":\"${username}\",\"validations\":{\"length\":{\"min\":3,\"max\":255},\"username-prohibited-characters\":{},\"up-username-not-idn-homograph\":{}},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false},{\"name\":\"email\",\"displayName\":\"${email}\",\"validations\":{\"email\":{},\"length\":{\"max\":255}},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false},{\"name\":\"firstName\",\"displayName\":\"${firstName}\",\"validations\":{\"length\":{\"max\":255},\"person-name-prohibited-characters\":{}},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false},{\"name\":\"lastName\",\"displayName\":\"${lastName}\",\"validations\":{\"length\":{\"max\":255},\"person-name-prohibited-characters\":{}},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false}],\"groups\":[{\"name\":\"user-metadata\",\"displayHeader\":\"User metadata\",\"displayDescription\":\"Attributes, which refer to user metadata\"}],\"unmanagedAttributePolicy\":\"ENABLED\"}" ]
      }
    } ],
    "org.keycloak.keys.KeyProvider" : [ {
      "id" : "3d7661cf-f902-4335-bd91-880e9a98537f",
      "name" : "hmac-generated-hs512",
      "providerId" : "hmac-generated",
      "subComponents" : { },
      "config" : {
        "kid" : [ "03d2be65-6b9f-4b9e-8b0f-bd971a3b25d0" ],
        "secret" : [ "lxuy3WiqunP2PDSW3D_IdXEoI5oLphbEG9sGQC19j3M81Z0OVTzu3an12TIyaXy45PoOJJg5vyMluoQNv27MISxo7DXtUuZBQKforBZmbRckn6Uq5IR6KUp48Tkp8YwBgbPir0NGqg5NiHa9WiysKlralgi_PWobpxo5pnSMAQ8" ],
        "priority" : [ "100" ],
        "algorithm" : [ "HS512" ]
      }
    }, {
      "id" : "06f0cc36-1c68-4865-844d-3754776dcca6",
      "name" : "rsa-enc-generated",
      "providerId" : "rsa-enc-generated",
      "subComponents" : { },
      "config" : {
        "privateKey" : [ "MIIEpQIBAAKCAQEA4bxoEZdDKl34yd/Q+KyxIGz1fQ1NthZLSuX/uAyXWvG//ExqDtPoz3qs50D741dqqgmM8lKSuLS/Q4uiVZNwJkJscd7CnwtWmyp0t2WVrDVABJZGNsFja1Qtk0dgKwg3l5MxeZLN7TXSn8ub+qRleViO3pvJPMPbBFMqpHbsRajRKbN3GO+xzzMRjMuWTtErjHOC//ww3gxKMFgXgf3qaG9ByQB6VkXB8Tm5E+dwKCkMujwQ5TE9z5s8FQnUFJZdR9sdFk9yrE7DnJnO+qUuXRFADgn8HrIOgGv0paLw5d6eF73s4rUNAiMuw0EQxmiFMfduDvaWy0XkVmlcakGdywIDAQABAoIBAGe4q1TR3QG9lhAkMB/jMawFhLMGBtwQ2F282sgVuQIHrMBf2CeiBQo4gvPrLxIh25fvtXyupk4KdwuxQFDz4wchZDTaNzDfA9deJa0TFze+bADvj6mfKHBriFlw5WZAa1LRRl1nMAm7vmDALJZ5LUsZfuQYTtoF4D/XevOA1UWX1D2Pkv0Mna6QkgF3kdeijYKiZY+8wMjy3onl3IU4mn3l/22jCRCCZ4xF7Sb2IsstoKMj+AmmA8wqPuL6ZyCH0tok4SMp8FpmgWUILfKSNxCLT3tZk+EX9lPO11XFSofaeqmkkyyxnNmdo4w66YTZtd5FRGy8KUKibnZRtLTv/vECgYEA80tCiDfIExZw4tU4eta4nsk8L3qB6rzqb7dyjKtr6U6NQV8+qN5i+Fwhuu2HV2tRjrsXq7SM/l9xzWDE5NO6eOz4F0wmUOanl6j5TLpziXY94HocsHcq9oxLgbq9Pyf/Ve9THJ3NXzlGpDtMUdzvFkS0csGt/xB4W1p6uCUvr/kCgYEA7YZnM/Sz4H6s6EiNFfM1YpPUogNLW/jJt1abgmVKD2VjJph582AajjhxQMAIvT5uo3jvcGgPqqWKjQ1NEccahJaIx19ot6OJ2AoF53PWh7oqQ9l1aqT8ttHQZA1Uqvkxu1DL5D61l86JRPdJCdPcsEJxkkkAnuGLxKPSu02KNOMCgYEAuhsT5cdl0NQVvi6EadLenvgohdkckEe6vYKCqYBnp6xi+WK2N88Fvh4b3zXblc+OL7SGQt52DA9OqmAfvTsJJX9/t7KUjMYj5StoqHzn7Hr6kkBWudYukzJ2f+Is6aba9w1/ciBz/Sd/FhoWI3jxmwMrVa06QCaFKrxnq30moWECgYEAhO6Bd7xtpyh+EIn6G9y/deoSSJHbbR+xlN/trG6Poko10XXoWmLgudOw3nIa8f6s4ORf7OLwUarP/d0B0v9BQg8Vga9N5eiqzrPdVgmoeNGhsdNUOVkY7iBCppwnVICeapzvX1ARRWKbxHM49z0Q97xX32zn4gOMu4KL/7OHs80CgYEAoH7mUsE5bdhvl6peek6TaVHNWK8RSHUIXo3+3SNVbXfyoLr6Tc7cuzIVWpRzkSlJ4ferUfxknOA5ZdqgYHpHdxSsCa6Hk5F7QHCjJyvv4qwU3LsaSl9FWSbzyL4MhWyI/FMgHC0jj3IjlKRHUeYINtSn+B/fvpmOyObWthndD1o=" ],
        "certificate" : [ "MIICnzCCAYcCBgGSlMBj+TANBgkqhkiG9w0BAQsFADATMREwDwYDVQQDDAhxdWFya3VzMjAeFw0yNDEwMTYwOTUzMDlaFw0zNDEwMTYwOTU0NDlaMBMxETAPBgNVBAMMCHF1YXJrdXMyMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA4bxoEZdDKl34yd/Q+KyxIGz1fQ1NthZLSuX/uAyXWvG//ExqDtPoz3qs50D741dqqgmM8lKSuLS/Q4uiVZNwJkJscd7CnwtWmyp0t2WVrDVABJZGNsFja1Qtk0dgKwg3l5MxeZLN7TXSn8ub+qRleViO3pvJPMPbBFMqpHbsRajRKbN3GO+xzzMRjMuWTtErjHOC//ww3gxKMFgXgf3qaG9ByQB6VkXB8Tm5E+dwKCkMujwQ5TE9z5s8FQnUFJZdR9sdFk9yrE7DnJnO+qUuXRFADgn8HrIOgGv0paLw5d6eF73s4rUNAiMuw0EQxmiFMfduDvaWy0XkVmlcakGdywIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQDCa04jiuX3g10gsJgtMoB5BqGG92TAUPOQoZeOSOyZRhyhZ+iidf5ZtrpDYAcRlSle7I9GU7xzHsDhpI+3rkg6blXEmc9aJuLpx2hROvYfB0XNUYRxyIJDbaBq8XVuIDNjOz1gYwGuG72WcpWvxPzZgAlKo3Y07J1nN86F1gzCAryVu14PQYA3ybS5pR97CEMrb3A/xu9H+Lq5GOhJRyViHrtr8Cd3Kt9Ou+stD+VMrupDmgZCXCcIFd/lD5inOG3qh86eh99uq77ueUGWAXM6xoYAfXp4m0iGBtxVWxv520nnePJoj/nQ5ULcV5weGxN5BscLMQ9hMRri8k9UIhCW" ],
        "priority" : [ "100" ],
        "algorithm" : [ "RSA-OAEP" ]
      }
    }, {
      "id" : "d7984093-ae76-4f70-980c-215e4f084795",
      "name" : "aes-generated",
      "providerId" : "aes-generated",
      "subComponents" : { },
      "config" : {
        "kid" : [ "70cd895b-afcc-4713-88e3-3e2cb476973d" ],
        "secret" : [ "y4_SrDOQdoDcPhQloT5mcQ" ],
        "priority" : [ "100" ]
      }
    }, {
      "id" : "fc454996-e48a-4077-a4cd-035ee9969e39",
      "name" : "rsa-generated",
      "providerId" : "rsa-generated",
      "subComponents" : { },
      "config" : {
        "privateKey" : [ "MIIEpAIBAAKCAQEAuluDtSFsJefCTFm2kaaIXTOQwU74aGQ0B3X3iIXv6KEJ/+Mg4DfFnCtcLgBwvpDWX6kwy3EsS8HmcLNPOaqtaU1sn7oN3Y7dtsG0+J7NzZY2nnUQy97Am9f6kqpGr3+pyiBjCfGFZ58u6ySN+G1tvh47sxfNeqeNVvwpEtkPxrMjPPXnO6YMQ6vlJx3HJRxqDl8sl++uF+MdUZzqAkzIEjanNQVgxgK9dToB55B2Y0oIS4pCa1fIRaBHUN3+B74i+evJbw35wUw94xNOa5ioECjh+HBqIk/5tuSFSe9lYjG0vZm6ntWG1tEdPCZdxMKYzybuxMM2hvmuSuGlxSAC+wIDAQABAoIBAEuCp1RubX7ScKU1OMe9ncV+Dmp1kCvkZjybrSgRdUtibUXVB04y6wxDeX9eSFC/KU3rpUzZ16P+tlv2G+T25nsjlx8FaXbb27Sguq5+0k86TXlZX+vrn0nGcs6Y1jloVikDhH3T8kUxd/ZpgmkmFfCSGYiQ3X6Ug626UP5FG6Jb5BNWKUv+96MBPLRHUVMJNg+J7F3BcFf754qaEGN+kGb9SfH/rPysbTE/glEaGk00GVZ92QOOxoCGL2SG6Q2uv9YeHuQdz+H52aGmsahmo49H1Lzi9OH7hvYzwgHPIQB8Hm539xT69Kjz+Etw0OeFKI9UCwM9zUmp7IUo00MowdkCgYEA7QPLu3KgCR5TQ6VzKQh8hqS0Bba0RKAR0z0EaKI2X2AaRPFs3WPQtfM4EDuhyB0ZF6yaB5K3RioF3TCKaxZ9b/iDUIxQrp/RP510cesJKu6eRlrTX7C2nEs57HnJvAi2c27ZlQvIl1RBuyJRD3U7282+OeGlo2BbuQU/bRhwtS0CgYEAyUjxmGHqzRLFO4GloLOgStPRniw+5CW1R28h2g+041NW4dn/sbixyOgLTKRSce6iK6SkygLr21YQvcJeVjFVi93sHIJn9PoSvIeJy02H+rUN+h0BFMToPjKxy9f+OX79sKrhN7Lm5e2olKuaq3tIibHcSpSABtwV1ZVTyITGAccCgYEAsY5OabaNPUeCiQLBKtQ4tYVdd4pPsblYoS7sxpX+taSBCXTzYUcNa8ExFrgVkpx518pt+Y5nziBdFD7w8xh+EAvUE9uJ9ce0Mjv6p/yzeX4ZBAu2ndD8fEm+svDpt/uu8vrv9UBGnVd5hn9GypXAqgGPqDzqoWHmVM0hntDYXmECgYEAvk7cNZHmmQv1NMToXx9WH0lT+DOnJrhMRATbwbt18DScgZ9GdLbGSMiz3jvCw3u3EoJxV5oZe2BNJcy+usmcM0iYc4AMX/+MdXnEm1ZriWtjkqWXnxZo6l2t4qgN8jiSDVYS6EGas6vW5vG0pAtE0wM53721qkat0imEdKKsP4MCgYAqs8vyq3tqRk+rcDZHFpmy3UHiFphtV7x1SOZq9z6Yx9CrNx74ShLmcZkXLcYJOH8hnIgNlqm273hJiFcDIrzey0OwDWkR5Rg+d5pXbTC+aX3xQWU+bPXvY8CVAtJVDQ/6pTtC1KUae/MGtT+UAQXBbUJkRLCI5lHFqV6atVcdxQ==" ],
        "certificate" : [ "MIICnzCCAYcCBgGSlMBkrzANBgkqhkiG9w0BAQsFADATMREwDwYDVQQDDAhxdWFya3VzMjAeFw0yNDEwMTYwOTUzMDlaFw0zNDEwMTYwOTU0NDlaMBMxETAPBgNVBAMMCHF1YXJrdXMyMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAuluDtSFsJefCTFm2kaaIXTOQwU74aGQ0B3X3iIXv6KEJ/+Mg4DfFnCtcLgBwvpDWX6kwy3EsS8HmcLNPOaqtaU1sn7oN3Y7dtsG0+J7NzZY2nnUQy97Am9f6kqpGr3+pyiBjCfGFZ58u6ySN+G1tvh47sxfNeqeNVvwpEtkPxrMjPPXnO6YMQ6vlJx3HJRxqDl8sl++uF+MdUZzqAkzIEjanNQVgxgK9dToB55B2Y0oIS4pCa1fIRaBHUN3+B74i+evJbw35wUw94xNOa5ioECjh+HBqIk/5tuSFSe9lYjG0vZm6ntWG1tEdPCZdxMKYzybuxMM2hvmuSuGlxSAC+wIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQAWLXeT8w+xpozfGcviP31X0Uqy+nUP4WiP1P+dfZE/MloMUB6ix6KTyWzJVNpl8pNkLBoclOb5mjcfnKseTbLb7wdNZIkPnp7pZ+q/TwcPtLI7bZvKEeSy8BMemtDZYhY2NClpNMBt0XtnvHAYT/Temeu9h+7nx/rb1iVDftyMfji80+q8NoJ8HmxjE1OQtIxQUv9MlpjYICNamc2HpHaynDpdk1oS+3kem+lSz5QtIXWzX45s061ne6QD/0hx3VErXrpSguIC7mNhuMfUKtdotkGkLklHwUcA0qmIbUPSpNU+ByzUCMqZK57B98tpNhMQNEcVZ9AUwIkY7IH4+bF7" ],
        "priority" : [ "100" ]
      }
    }, {
      "id" : "edbd4061-8f03-4135-ae76-216fd6401f67",
      "name" : "hmac-generated",
      "providerId" : "hmac-generated",
      "subComponents" : { },
      "config" : {
        "kid" : [ "07e99837-7855-471d-bb71-aa8c097a5b3c" ],
        "secret" : [ "_Sj6reQz4ROjzmKYO-7Asz8M_CaFhgCbkzyQIUO4KEax9SnWBWduvvSHkx0Vsil9elV5kh9NGvZla6gB6PbCkEkC1pOrFRy09TFmNDzZWWUhCTm60ZY6t1sfgqZgaESeuvUsqWxkub2eIYTTEdlvjgIIwjGkmP_P9w5jxzp2GsE" ],
        "priority" : [ "100" ],
        "algorithm" : [ "HS256" ]
      }
    } ]
  },
  "internationalizationEnabled" : false,
  "supportedLocales" : [ ],
  "authenticationFlows" : [ {
    "id" : "07bc2c3e-9864-4b68-ad16-18752ce39f2d",
    "alias" : "Account verification options",
    "description" : "Method with which to verity the existing account",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-email-verification",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Verify Existing Account by Re-authentication",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "9f17f5fc-db08-4590-b181-64b6d7d78698",
    "alias" : "Authentication policies - PARENT",
    "description" : "Parent Authentication Policy",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : false,
    "authenticationExecutions" : [ ]
  }, {
    "id" : "7edd3c86-1d89-4370-922a-b93bcab95c9b",
    "alias" : "Browser - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "c3051bca-8c0a-42c4-be45-306b36ef9d47",
    "alias" : "Direct Grant - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "direct-grant-validate-otp",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "42544b7a-3918-4cec-a741-bf620eda1b30",
    "alias" : "First broker login - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "4b03b3a8-4441-49b9-877e-2ca73a2cb8c1",
    "alias" : "Handle Existing Account",
    "description" : "Handle what to do if there is existing account with same email/username like authenticated identity provider",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-confirm-link",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Account verification options",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "3bc0d1c7-c3cc-431e-b080-814f7ac578fa",
    "alias" : "High Risk",
    "description" : "",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : false,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "high",
      "authenticator" : "simple-risk-levels-condition",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 0,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorConfig" : "deny-access",
      "authenticator" : "deny-access-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 1,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "bc7d1261-5127-4efe-8a24-3db4e1ca1181",
    "alias" : "LOA 1",
    "description" : "",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : false,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "Level1",
      "authenticator" : "conditional-level-of-authentication",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 2,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "webauthn-authenticator-passwordless",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 3,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "0132518f-1ba3-44e8-bb75-8477a0cd05d6",
    "alias" : "LOA2",
    "description" : "",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : false,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "Level2",
      "authenticator" : "conditional-level-of-authentication",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 0,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 1,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "ca55d199-caa3-41bc-816d-ce67df7e2b8c",
    "alias" : "LOA4",
    "description" : "",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : false,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "Level4",
      "authenticator" : "conditional-level-of-authentication",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 1,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "allow-access-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 2,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "24023a8a-fba9-47f7-a5dc-c2654f8a21b3",
    "alias" : "LOA5",
    "description" : "",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : false,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "Level5",
      "authenticator" : "conditional-level-of-authentication",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 2,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 3,
      "autheticatorFlow" : true,
      "flowAlias" : "Webauthn authenticator flow",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "b5f7c8db-be92-4558-b594-0280c1a6e2c4",
    "alias" : "Low Risk",
    "description" : "",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : false,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "low",
      "authenticator" : "simple-risk-levels-condition",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 0,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "allow-access-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 1,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "4533cd0f-baa6-4adc-a9a1-510383226495",
    "alias" : "Medium Risk",
    "description" : "",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : false,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "medium",
      "authenticator" : "simple-risk-levels-condition",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 0,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 1,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "a4294f53-741d-424b-92be-0e0c14044766",
    "alias" : "Reset - Conditional OTP",
    "description" : "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-otp",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "87491b5d-9458-49c5-9daa-b87ad7176874",
    "alias" : "User creation or linking",
    "description" : "Flow for the existing/non-existing user alternatives",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "create unique user config",
      "authenticator" : "idp-create-user-if-unique",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Handle Existing Account",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "5c580176-022f-406b-8324-758a6537babd",
    "alias" : "Verify Existing Account by Re-authentication",
    "description" : "Reauthentication of existing account",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "First broker login - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "ed2c8f28-fef5-43b4-8b73-3f082171a421",
    "alias" : "Webauthn authenticator flow",
    "description" : "",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : false,
    "authenticationExecutions" : [ {
      "authenticator" : "webauthn-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 1,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "e6b71cd8-1d93-48ec-997f-a5a73344de7f",
    "alias" : "adaptive",
    "description" : "adaptive browser based authentication",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : false,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-cookie",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-spnego",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "identity-provider-redirector",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 25,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "autheticatorFlow" : true,
      "flowAlias" : "adaptive forms",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "ad1c758f-d331-445e-bd7c-6e0fb1b673b8",
    "alias" : "adaptive forms",
    "description" : "Username, password, otp and other auth forms.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : false,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "NO-USER",
      "authenticator" : "default-risk-engine",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 11,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorConfig" : "REQUIRES_USER",
      "authenticator" : "default-risk-engine",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 14,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 15,
      "autheticatorFlow" : true,
      "flowAlias" : "Low Risk",
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 16,
      "autheticatorFlow" : true,
      "flowAlias" : "Medium Risk",
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 17,
      "autheticatorFlow" : true,
      "flowAlias" : "High Risk",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "2d868398-99ff-4c47-b058-5734c3e95c39",
    "alias" : "browser",
    "description" : "browser based authentication",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-cookie",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-spnego",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "identity-provider-redirector",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 25,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "autheticatorFlow" : true,
      "flowAlias" : "forms",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "36f3296e-0754-4666-81c2-83c4248e788e",
    "alias" : "browser-authn-flow",
    "description" : "",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : false,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-username-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 1,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 3,
      "autheticatorFlow" : true,
      "flowAlias" : "LOA 1",
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 4,
      "autheticatorFlow" : true,
      "flowAlias" : "LOA4",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "e1e9e994-3c7b-4243-9eaa-71f947e9722c",
    "alias" : "browser-fido2",
    "description" : "based authentication fido2",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : false,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-cookie",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "autheticatorFlow" : true,
      "flowAlias" : "browser-authn-flow",
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 32,
      "autheticatorFlow" : true,
      "flowAlias" : "browser-fido2 forms",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "9f6090a7-a4fb-41cc-9435-631ae2c5cd30",
    "alias" : "browser-fido2 forms",
    "description" : "Username, password, otp and other auth forms.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : false,
    "authenticationExecutions" : [ {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 10,
      "autheticatorFlow" : true,
      "flowAlias" : "LOA2",
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 11,
      "autheticatorFlow" : true,
      "flowAlias" : "LOA5",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "d9c3080a-dfed-420a-a683-3a79afb8547e",
    "alias" : "clients",
    "description" : "Base authentication for clients",
    "providerId" : "client-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "client-secret",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-jwt",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-secret-jwt",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-x509",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 40,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "0aaa2237-c38f-4b28-8338-6c2d671c4587",
    "alias" : "direct grant",
    "description" : "OpenID Connect Resource Owner Grant",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "direct-grant-validate-username",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "direct-grant-validate-password",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 30,
      "autheticatorFlow" : true,
      "flowAlias" : "Direct Grant - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "7caacc00-1b16-4399-b8e4-94959558606a",
    "alias" : "docker auth",
    "description" : "Used by Docker clients to authenticate against the IDP",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "docker-http-basic-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "fce966bf-1f9c-48db-95d9-23850f5e6923",
    "alias" : "first broker login",
    "description" : "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "review profile config",
      "authenticator" : "idp-review-profile",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "User creation or linking",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "793869ac-f533-44a5-b6d7-94ec5124c011",
    "alias" : "forms",
    "description" : "Username, password, otp and other auth forms.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Browser - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "da1eefb1-15c4-4c0b-a18d-d6d92872518d",
    "alias" : "registration",
    "description" : "registration flow",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-page-form",
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : true,
      "flowAlias" : "registration form",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "1dec59d9-04a5-4bf2-813d-456290df0834",
    "alias" : "registration form",
    "description" : "registration form",
    "providerId" : "form-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-user-creation",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-password-action",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 50,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-recaptcha-action",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 60,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "09dd58f8-9dc6-4457-8615-53078a4e2d80",
    "alias" : "reset credentials",
    "description" : "Reset credentials for a user if they forgot their password or something",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "reset-credentials-choose-user",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-credential-email",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-password",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 40,
      "autheticatorFlow" : true,
      "flowAlias" : "Reset - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "1806b72d-6938-4c19-8192-cd6a11a67215",
    "alias" : "saml ecp",
    "description" : "SAML ECP Profile Authentication Flow",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "http-basic-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  } ],
  "authenticatorConfig" : [ {
    "id" : "b7cc5b22-12ae-4ec6-9fb6-beae63edcf40",
    "alias" : "Level 1",
    "config" : {
      "loa-condition-level" : "1",
      "loa-max-age" : "36000"
    }
  }, {
    "id" : "df2c547d-9cfc-48e7-9495-2066a93f3834",
    "alias" : "Level 1",
    "config" : {
      "loa-condition-level" : "1",
      "loa-max-age" : "36000"
    }
  }, {
    "id" : "825fa038-a084-45ff-a8bc-a86b299ff0f7",
    "alias" : "Level 2",
    "config" : {
      "loa-condition-level" : "2",
      "loa-max-age" : "36000"
    }
  }, {
    "id" : "56bfad45-ee24-485a-8535-0d6de41f003a",
    "alias" : "Level 2",
    "config" : {
      "loa-condition-level" : "2",
      "loa-max-age" : "36000"
    }
  }, {
    "id" : "187e6e93-8c61-4bbd-b5a3-3beb8c6085d8",
    "alias" : "Level1",
    "config" : {
      "loa-condition-level" : "4",
      "loa-max-age" : "36000"
    }
  }, {
    "id" : "b5112b18-f717-42d2-bda0-dee53a73c5d8",
    "alias" : "Level2",
    "config" : {
      "loa-condition-level" : "2",
      "loa-max-age" : "36000"
    }
  }, {
    "id" : "691a7f5b-bf00-4a10-ae71-2bd182ee7d59",
    "alias" : "Level4",
    "config" : {
      "loa-condition-level" : "4",
      "loa-max-age" : "36000"
    }
  }, {
    "id" : "bf716f43-b1c5-4a1e-b767-0695383647a4",
    "alias" : "Level5",
    "config" : {
      "loa-condition-level" : "5",
      "loa-max-age" : "36000"
    }
  }, {
    "id" : "5d719870-c87a-454c-8752-1468befaaa2d",
    "alias" : "NO-USER",
    "config" : {
      "requiresUserConfig" : "false"
    }
  }, {
    "id" : "5f72a480-8483-4591-afcc-c8a6351b6c07",
    "alias" : "REQUIRES_USER",
    "config" : {
      "requiresUserConfig" : "true"
    }
  }, {
    "id" : "1cc25103-895c-4fe5-881f-e8be2646e261",
    "alias" : "create unique user config",
    "config" : {
      "require.password.update.after.registration" : "false"
    }
  }, {
    "id" : "f68cff18-b6a2-48e8-a5f5-06835e46fe53",
    "alias" : "deny-access",
    "config" : {
      "denyErrorMessage" : "Suspicious activity in your account. Please, try it again later."
    }
  }, {
    "id" : "bde72f73-2f12-4405-b49b-e9168e661cd5",
    "alias" : "high",
    "config" : {
      "level-config" : "HIGH"
    }
  }, {
    "id" : "40198767-f0a8-40d6-a112-fd5b17390756",
    "alias" : "low",
    "config" : {
      "level-config" : "LOW"
    }
  }, {
    "id" : "3d87d5eb-4267-4b28-aa03-28e31342394c",
    "alias" : "medium",
    "config" : {
      "level-config" : "MEDIUM"
    }
  }, {
    "id" : "9ea4454d-5a45-431e-bfbd-f4292a4f6f5c",
    "alias" : "review profile config",
    "config" : {
      "update.profile.on.first.login" : "missing"
    }
  } ],
  "requiredActions" : [ {
    "alias" : "CONFIGURE_TOTP",
    "name" : "Configure OTP",
    "providerId" : "CONFIGURE_TOTP",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 10,
    "config" : { }
  }, {
    "alias" : "TERMS_AND_CONDITIONS",
    "name" : "Terms and Conditions",
    "providerId" : "TERMS_AND_CONDITIONS",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 20,
    "config" : { }
  }, {
    "alias" : "UPDATE_PASSWORD",
    "name" : "Update Password",
    "providerId" : "UPDATE_PASSWORD",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 30,
    "config" : { }
  }, {
    "alias" : "UPDATE_PROFILE",
    "name" : "Update Profile",
    "providerId" : "UPDATE_PROFILE",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 40,
    "config" : { }
  }, {
    "alias" : "VERIFY_EMAIL",
    "name" : "Verify Email",
    "providerId" : "VERIFY_EMAIL",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 50,
    "config" : { }
  }, {
    "alias" : "delete_account",
    "name" : "Delete Account",
    "providerId" : "delete_account",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 60,
    "config" : { }
  }, {
    "alias" : "webauthn-register",
    "name" : "Webauthn Register",
    "providerId" : "webauthn-register",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 70,
    "config" : { }
  }, {
    "alias" : "webauthn-register-passwordless",
    "name" : "Webauthn Register Passwordless",
    "providerId" : "webauthn-register-passwordless",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 80,
    "config" : { }
  }, {
    "alias" : "delete_credential",
    "name" : "Delete Credential",
    "providerId" : "delete_credential",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 100,
    "config" : { }
  }, {
    "alias" : "update_user_locale",
    "name" : "Update User Locale",
    "providerId" : "update_user_locale",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 1000,
    "config" : { }
  } ],
  "browserFlow" : "adaptive",
  "registrationFlow" : "registration",
  "directGrantFlow" : "direct grant",
  "resetCredentialsFlow" : "reset credentials",
  "clientAuthenticationFlow" : "clients",
  "dockerAuthenticationFlow" : "docker auth",
  "firstBrokerLoginFlow" : "first broker login",
  "attributes" : {
    "cibaBackchannelTokenDeliveryMode" : "poll",
    "cibaAuthRequestedUserHint" : "login_hint",
    "clientOfflineSessionMaxLifespan" : "0",
    "oauth2DevicePollingInterval" : "5",
    "clientSessionIdleTimeout" : "0",
    "clientOfflineSessionIdleTimeout" : "0",
    "cibaInterval" : "5",
    "realmReusableOtpCode" : "false",
    "cibaExpiresIn" : "120",
    "oauth2DeviceCodeLifespan" : "600",
    "parRequestUriLifespan" : "60",
    "clientSessionMaxLifespan" : "0",
    "frontendUrl" : "",
    "organizationsEnabled" : "false",
    "acr.loa.map" : "{\"password\":\"1\",\"biometric-2ndfactor\":\"5\",\"biometric\":\"4\"}",
    "adminEventsExpiration" : ""
  },
  "keycloakVersion" : "25.0.4-AUTHN-POLICIES",
  "userManagedAccessAllowed" : false,
  "organizationsEnabled" : false,
  "clientProfiles" : {
    "profiles" : [ ]
  },
  "clientPolicies" : {
    "policies" : [ ]
  }
}